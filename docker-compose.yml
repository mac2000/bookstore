version: '3'
services:

  postgres:
    image: postgres
    container_name: postgres
    hostname: postgres
    restart: always
    environment:
      POSTGRES_USER: books
      POSTGRES_PASSWORD: books
      POSTGRES_DB: books
    ports:
      - 5432:5432
    volumes:
      - pg_data:/var/lib/postgresql/data

  mongo:
    image: mongo
    hostname: mongo
    container_name: mongo
    restart: always
    ports:
      - 27017:27017
    environment:
      - MONGO_INITDB_ROOT_USERNAME=reviews
      - MONGO_INITDB_ROOT_PASSWORD=reviews
      - MONGO_INITDB_DATABASE=reviews
    volumes:
      - mongo_data:/data/db

  redis:
    image: redis
    hostname: redis
    container_name: redis
    restart: always
    ports:
      - 6379:6379

  books:
    build:
      context: books
      dockerfile: Dockerfile
    container_name: books
    hostname: books
    restart: always
    depends_on:
      - postgres
    environment:
      CONNECTION_STRING: Host=postgres;Port=5432;Database=books;Username=books;Password=books
    ports:
      - 5001:80

  reviews:
    build:
      context: reviews
      dockerfile: Dockerfile
    hostname: reviews
    container_name: reviews
    restart: always
    depends_on:
      - mongo
    ports:
      - 3000:3000
    environment:
      - MONGO_URL=mongodb://reviews:reviews@mongo:27017

  votes:
    build:
      context: votes
      dockerfile: Dockerfile
    hostname: votes
    container_name: votes
    restart: always
    depends_on:
      - redis
    ports:
      - 8080:8080
    environment:
      - REDIS_URL=redis:6379

  frontend:
    build:
      context: frontend
      dockerfile: Dockerfile
    hostname: frontend
    container_name: frontend
    restart: always
    depends_on:
      - books
      - reviews
      - votes
    ports:
      - 4000:4000

volumes:
  pg_data:
  mongo_data:
